{"version":3,"sources":["utils/date.ts","components/CommentLikeBlock/CommentLikeBlock.styles.ts","components/CommentLikeBlock/CommentLikeBlock.tsx","components/Timeline/TimelineItem.styles.ts","components/Timeline/TimelineItem.tsx","components/Timeline/InitialItem.tsx","components/Timeline/Timeline.styles.ts","components/Timeline/Timeline.tsx","config/education.tsx","routes/Education/EducationTimelineItem.tsx","routes/Education/Education.styles.ts","routes/Education/Education.tsx"],"names":["formatIntervalShort","start","end","format","duration","intervalToDuration","formatDuration","formatInterval","replace","formatMonthsAsIntervalShort","months","Date","addMonths","useStyles","makeStyles","theme","createStyles","commentLikeBlock","fontFamily","color","fontSize","typography","body1","maxWidth","position","slash","palette","text","secondary","line","top","bottom","left","width","backgroundColor","childrenWrapper","paddingLeft","CommentLikeBlock","props","classes","className","clsx","title","children","timelineItem","flex","padding","initialItem","dot","borderColor","primary","main","light","connector","content","paddingTop","paddingRight","paddingBottom","spacing","lineHeight","marginBottom","subtitle","fontWeight","timeDiff","description","height","TimelineItem","React","memo","TimelineSeparator","TimelineDot","variant","TimelineConnector","TimelineContent","Typography","dateFrom","dateTo","descriptionTitle","InitialItem","timeline","breakpoints","down","Timeline","EDUCATION","id","name","field","degree","grade","UTC","EducationTimelineItem","margin","itemConnector","Education","map","edu","key"],"mappings":"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","file":"static/js/8.eb209a10.chunk.js","sourcesContent":["import { formatDuration, intervalToDuration, addMonths } from \"date-fns\";\n\nexport const formatInterval = ({\n  start,\n  end,\n  format = [\"years\", \"months\"],\n}: {\n  start: Date;\n  end: Date;\n  format?: string[];\n}) => {\n  const duration = intervalToDuration({ start, end });\n  return formatDuration(duration, { format });\n};\n\nexport const formatIntervalShort = ({\n  start,\n  end,\n}: {\n  start: Date;\n  end: Date;\n}) => {\n  return formatInterval({ start, end })\n    .replace(\"year\", \"yr\")\n    .replace(\"month\", \"mo\");\n};\n\nexport const formatMonthsAsIntervalShort = (months: number) => {\n  return formatIntervalShort({\n    start: new Date(0),\n    end: addMonths(new Date(0), months),\n  });\n};\n","import { createStyles, makeStyles } from \"@material-ui/core\";\n\nexport const useStyles = makeStyles((theme) =>\n  createStyles({\n    commentLikeBlock: {\n      fontFamily: \"IBM Plex Mono\",\n      color: \"#a9b7c6\",\n      fontSize: theme.typography.body1.fontSize,\n      maxWidth: \"800px\",\n      position: \"relative\",\n    },\n    slash: {\n      color: theme.palette.text.secondary,\n    },\n    line: {\n      position: \"absolute\",\n      top: \"1.1em\",\n      bottom: \"1.4em\",\n      left: \"0.8em\",\n      width: \"1px\",\n      backgroundColor: theme.palette.text.secondary,\n    },\n    childrenWrapper: {\n      fontSize: \"inherit\",\n      paddingLeft: \"1.5em\",\n    },\n  })\n);\n","import React from \"react\";\nimport clsx from \"clsx\";\n\nimport { useStyles } from \"./CommentLikeBlock.styles\";\n\ninterface CommentLikeBlockProps {\n  className?: string;\n  title?: React.ReactNode;\n}\n\nexport const CommentLikeBlock: React.FC<CommentLikeBlockProps> = (props) => {\n  const classes = useStyles();\n\n  return (\n    <div className={clsx(classes.commentLikeBlock, props.className)}>\n      <div className={classes.slash}>\n        /** {props.title} {!props.children && \"*/\"}\n      </div>\n      {props.children && (\n        <>\n          <div className={classes.line} />\n          <div className={classes.childrenWrapper}>{props.children}</div>\n          <div className={classes.slash}>&nbsp;*/</div>\n        </>\n      )}\n    </div>\n  );\n};\n","import { createStyles, makeStyles } from \"@material-ui/core\";\n\nexport const useStyles = makeStyles((theme) =>\n  createStyles({\n    timelineItem: {\n      \"&::before\": {\n        flex: 0,\n        padding: 0,\n      },\n    },\n    initialItem: {},\n    dot: {\n      \".az-timeline-primary-main &\": {\n        borderColor: theme.palette.primary.main,\n      },\n      \".az-timeline-primary-light &\": {\n        borderColor: theme.palette.primary.light,\n      },\n      \".az-timeline-secondary-main &\": {\n        borderColor: theme.palette.secondary.main,\n      },\n      \".az-timeline-secondary-light &\": {\n        borderColor: theme.palette.secondary.light,\n      },\n      \"$initialItem &\": {\n        \".az-timeline-primary-main &\": {\n          backgroundColor: theme.palette.primary.main,\n        },\n        \".az-timeline-primary-light &\": {\n          backgroundColor: theme.palette.primary.light,\n        },\n        \".az-timeline-secondary-main &\": {\n          backgroundColor: theme.palette.secondary.main,\n        },\n        \".az-timeline-secondary-light &\": {\n          backgroundColor: theme.palette.secondary.light,\n        },\n      },\n    },\n    connector: {\n      \".az-timeline-primary-main &\": {\n        backgroundColor: theme.palette.primary.main,\n      },\n      \".az-timeline-primary-light &\": {\n        backgroundColor: theme.palette.primary.light,\n      },\n      \".az-timeline-secondary-main &\": {\n        backgroundColor: theme.palette.secondary.main,\n      },\n      \".az-timeline-secondary-light &\": {\n        backgroundColor: theme.palette.secondary.light,\n      },\n    },\n    content: {\n      paddingTop: 0,\n      paddingRight: 0,\n      paddingBottom: theme.spacing(2),\n    },\n    title: {\n      lineHeight: 1,\n      paddingTop: \"0.2em\",\n      marginBottom: \"0.2em\",\n      \"$initialItem &\": {\n        \".az-timeline-primary-main &\": {\n          color: theme.palette.primary.main,\n        },\n        \".az-timeline-primary-light &\": {\n          color: theme.palette.primary.light,\n        },\n        \".az-timeline-secondary-main &\": {\n          color: theme.palette.secondary.main,\n        },\n        \".az-timeline-secondary-light &\": {\n          color: theme.palette.secondary.light,\n        },\n      },\n    },\n    subtitle: {\n      color: \"#fff\",\n      fontWeight: 500,\n    },\n    timeDiff: {\n      color: \"rgba(255,255,255,0.5)\",\n    },\n    description: {\n      fontSize: theme.typography.body1.fontSize,\n      height: \"auto\",\n    },\n  })\n);\n","import { Typography } from \"@material-ui/core\";\nimport {\n  TimelineItem as MuiTimelineItem,\n  TimelineContent,\n  TimelineSeparator,\n  TimelineDot,\n  TimelineConnector,\n} from \"@material-ui/lab\";\nimport React from \"react\";\nimport { format, addMonths } from \"date-fns\";\nimport clsx from \"clsx\";\n\nimport { formatIntervalShort } from \"~/utils/date\";\nimport { CommentLikeBlock } from \"~/components/CommentLikeBlock\";\n\nimport { useStyles } from \"./TimelineItem.styles\";\n\nexport interface TimelineItemProps {\n  classes?: ClassesOverride<typeof useStyles>;\n  children?: React.ReactNode;\n  className?: string;\n  descriptionTitle?: React.ReactNode;\n  dateFrom: Date;\n  dateTo?: Date;\n  subtitle?: React.ReactNode;\n  title: React.ReactNode;\n}\n\nconst TimelineItemBase: React.FC<TimelineItemProps> = (props) => {\n  const classes = useStyles(props);\n  return (\n    <MuiTimelineItem className={clsx(classes.timelineItem, props.className)}>\n      <TimelineSeparator>\n        <TimelineDot className={classes.dot} variant=\"outlined\" />\n        <TimelineConnector className={classes.connector} />\n      </TimelineSeparator>\n\n      <TimelineContent className={classes.content}>\n        <Typography className={classes.title} variant=\"h6\" color=\"primary\">\n          {props.title}\n        </Typography>\n\n        <Typography variant=\"body2\">\n          {format(props.dateFrom, \"MMM yyyy\")}\n          {\" – \"}\n          {props.dateTo ? format(props.dateTo, \"MMM yyyy\") : \"Present\"}\n          <span className={classes.timeDiff}>\n            {\" < \"}\n            {formatIntervalShort({\n              start: props.dateFrom,\n              end: addMonths(props.dateTo || new Date(), 1),\n            })}\n            {\" >\"}\n          </span>\n        </Typography>\n\n        {props.subtitle && (\n          <Typography className={classes.subtitle} variant=\"body1\">\n            {props.subtitle}\n          </Typography>\n        )}\n\n        {(props.children || props.descriptionTitle) && (\n          <CommentLikeBlock\n            className={classes.description}\n            title={props.descriptionTitle}\n          >\n            {props.children}\n          </CommentLikeBlock>\n        )}\n      </TimelineContent>\n    </MuiTimelineItem>\n  );\n};\n\nexport const TimelineItem = React.memo(TimelineItemBase);\n","import { Typography } from \"@material-ui/core\";\nimport {\n  TimelineItem,\n  TimelineContent,\n  TimelineSeparator,\n  TimelineDot,\n} from \"@material-ui/lab\";\nimport React from \"react\";\nimport clsx from \"clsx\";\n\nimport { useStyles } from \"./TimelineItem.styles\";\n\nexport interface InitialItemProps {\n  children?: React.ReactNode;\n  classes?: ClassesOverride<typeof useStyles>;\n  className?: string;\n}\n\nconst InitialItemBase: React.FC<InitialItemProps> = (props) => {\n  const classes = useStyles(props);\n  return (\n    <TimelineItem\n      className={clsx(\n        classes.timelineItem,\n        classes.initialItem,\n        props.className\n      )}\n    >\n      <TimelineSeparator>\n        <TimelineDot className={classes.dot} />\n      </TimelineSeparator>\n      <TimelineContent className={classes.content}>\n        <Typography className={classes.title} variant=\"h6\">\n          {props.children}\n        </Typography>\n      </TimelineContent>\n    </TimelineItem>\n  );\n};\n\nexport const InitialItem = React.memo(InitialItemBase);\n","import { createStyles, makeStyles } from \"@material-ui/core\";\n\nexport const useStyles = makeStyles((theme) =>\n  createStyles({\n    timeline: {\n      padding: theme.spacing(0, 2, 0, 3),\n      [theme.breakpoints.down(\"sm\")]: {\n        paddingLeft: theme.spacing(2),\n      },\n    },\n  })\n);\n","import { Timeline as MuiTimeline } from \"@material-ui/lab\";\nimport React from \"react\";\nimport clsx from \"clsx\";\n\nimport { useStyles } from \"./Timeline.styles\";\n\nexport interface TimelineProps {\n  children: React.ReactNode;\n  className?: string;\n  variant?: \"primary\" | \"secondary\";\n  color?: \"main\" | \"light\";\n}\n\nconst TimelineBase: React.FC<TimelineProps> = (props) => {\n  const classes = useStyles();\n  return (\n    <MuiTimeline\n      className={clsx(\n        classes.timeline,\n        `az-timeline-${props.variant || \"primary\"}-${props.color || \"main\"}`,\n        props.className\n      )}\n    >\n      {props.children}\n    </MuiTimeline>\n  );\n};\n\nexport const Timeline = React.memo(TimelineBase);\n","interface EducationBase<Id = string> {\n  id: Id;\n  name: string;\n  field: string;\n  degree: string;\n  grade: string;\n  dateFrom: Date;\n  dateTo?: Date;\n}\n\nexport const EDUCATION = (<T extends any>(t: readonly EducationBase<T>[]) => t)(\n  [\n    {\n      id: \"University\",\n      name: `Indian Institute of Management (IIM) Calcutta\"`,\n      field: \"Product Management\",\n      degree: \"MBA degree\",\n      grade: \"6.3 (by the nine-point system)\",\n      dateFrom: new Date(Date.UTC(2020, 7)),\n      dateTo: new Date(Date.UTC(2022, 2)),\n    },\n    {\n      id: \"College\",\n      name: `Delhi Technological University (Formerly Delhi College of Engineering)`,\n      field: \"Electrical Engineering\",\n      degree: \"B.TECH\",\n      grade: \"8.1 (by the ten-point system)\",\n      dateFrom: new Date(Date.UTC(2013, 7)),\n      dateTo: new Date(Date.UTC(2017, 3)),\n    },\n  ] as const\n);\n\nexport type EducationId = typeof EDUCATION[number][\"id\"];\n\nexport type Education = EducationBase<EducationId>;\n","import React from \"react\";\n\nimport { Education } from \"~/config/education\";\nimport { TimelineItem } from \"~/components/Timeline\";\n\nexport interface EducationTimelineItemProps extends Education {}\n\nconst EducationTimelineItemBase: React.FC<EducationTimelineItemProps> = (\n  props\n) => {\n  return (\n    <TimelineItem\n      title={props.name}\n      subtitle={`${props.degree}, ${props.field}`}\n      dateFrom={props.dateFrom}\n      dateTo={props.dateTo}\n      descriptionTitle={`Grade: ${props.grade}`}\n    />\n  );\n};\n\nexport const EducationTimelineItem = React.memo(EducationTimelineItemBase);\n","import { createStyles, makeStyles } from \"@material-ui/core\";\n\nexport const useStyles = makeStyles((theme) =>\n  createStyles({\n    timeline: {\n      margin: 0,\n    },\n    itemConnector: {\n      backgroundColor: theme.palette.secondary.light,\n    },\n  })\n);\n","import React from \"react\";\n\nimport { EDUCATION } from \"~/config/education\";\nimport { Timeline, InitialItem, TimelineItem } from \"~/components/Timeline\";\n\nimport { EducationTimelineItem } from \"./EducationTimelineItem\";\n\nimport { useStyles } from \"./Education.styles\";\n\nexport const Education: React.FC = () => {\n  const classes = useStyles();\n  return (\n    <Timeline className={classes.timeline} variant=\"secondary\" color=\"light\">\n      <TimelineItem\n        title=\"Life\"\n        subtitle=\"Self Education\"\n        dateFrom={new Date(Date.UTC(1995, 9))}\n      >\n        I am curious about the world and the way it works. I always try to learn\n        something new every day no matter whether it is about programming,\n        product, science, technology, music or mythology\n      </TimelineItem>\n\n      {EDUCATION.map((edu) => (\n        <EducationTimelineItem key={edu.id} {...edu} />\n      ))}\n\n      <InitialItem>School</InitialItem>\n    </Timeline>\n  );\n};\n\nexport default Education;\n"],"sourceRoot":""}