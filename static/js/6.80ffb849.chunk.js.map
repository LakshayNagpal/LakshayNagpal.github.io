{"version":3,"sources":["../node_modules/@material-ui/core/esm/Link/Link.js","../node_modules/@material-ui/icons/esm/OpenInNew.js","components/LinkOpen/LinkOpen.styles.ts","components/LinkOpen/LinkOpen.tsx","components/IfHirable/IfHirable.tsx","routes/AboutMe/AboutMe.styles.ts","routes/AboutMe/AboutMe.tsx"],"names":["Link","React","props","ref","classes","className","_props$color","color","_props$component","component","onBlur","onFocus","TypographyClasses","_props$underline","underline","_props$variant","variant","other","_objectWithoutProperties","_useIsFocusVisible","useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","_React$useState","focusVisible","setFocusVisible","handlerRef","useForkRef","Typography","_extends","clsx","root","concat","capitalize","button","event","withStyles","underlineNone","textDecoration","underlineHover","underlineAlways","position","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","padding","cursor","userSelect","verticalAlign","borderStyle","name","createSvgIcon","createElement","d","useStyles","makeStyles","theme","createStyles","linkOpen","whiteSpace","palette","primary","main","light","fontSize","display","icon","marginLeft","LinkOpen","content","children","hasLinkIcon","OpenInNew","external","href","to","target","rel","IfHirable","IS_HIRABLE","IfNotHirable","width","height","marginBottom","AboutMe","CodeLikeBlock","active","git"],"mappings":"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","file":"static/js/6.80ffb849.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nvar Link = /*#__PURE__*/React.forwardRef(function Link(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'a' : _props$component,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      TypographyClasses = props.TypographyClasses,\n      _props$underline = props.underline,\n      underline = _props$underline === void 0 ? 'hover' : _props$underline,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'inherit' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  var handlerRef = useForkRef(ref, focusVisibleRef);\n\n  var handleBlur = function handleBlur(event) {\n    if (focusVisible) {\n      onBlurVisible();\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[\"underline\".concat(capitalize(underline))], className, focusVisible && classes.focusVisible, component === 'button' && classes.button),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  /**\n   * The content of the link.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   */\n  underline: PropTypes.oneOf(['none', 'hover', 'always']),\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\"\n}), 'OpenInNew');","import { createStyles, makeStyles } from \"@material-ui/core\";\n\nexport const useStyles = makeStyles((theme) =>\n  createStyles({\n    linkOpen: {\n      whiteSpace: \"nowrap\",\n      color: theme.palette.primary.main,\n      \"&:hover\": {\n        color: theme.palette.primary.light,\n      },\n      \"& > *\": {\n        fontSize: \"inherit\",\n        display: \"inline-block\",\n        verticalAlign: \"bottom\",\n      },\n      \"& svg\": {\n        position: \"relative\",\n      },\n    },\n    icon: {\n      marginLeft: \"0.5em\",\n    },\n  })\n);\n","import { Link as MuiLink } from \"@material-ui/core\";\nimport { OpenInNew as OpenInNewIcon } from \"@material-ui/icons\";\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport { Link } from \"react-router-dom\";\n\nimport { useStyles } from \"./LinkOpen.styles\";\n\nexport interface LinkOpenProps {\n  className?: string;\n  to: string;\n  external?: boolean;\n  hasLinkIcon?: boolean;\n}\n\nexport const LinkOpen: React.FC<LinkOpenProps> = (props) => {\n  const classes = useStyles();\n  const className = clsx(classes.linkOpen, props.className);\n\n  const content = (\n    <>\n      <span>{props.children}</span>\n      {props.hasLinkIcon && <OpenInNewIcon className={classes.icon} />}\n    </>\n  );\n\n  return props.external ? (\n    <MuiLink\n      className={className}\n      href={props.to}\n      target=\"_blank\"\n      rel=\"external nofollow\"\n    >\n      {content}\n    </MuiLink>\n  ) : (\n    <Link className={className} to={props.to}>\n      {content}\n    </Link>\n  );\n};\n","import React from \"react\";\n\nimport { IS_HIRABLE } from \"~/config/experience\";\n\nexport const IfHirable: React.FC = (props) => {\n  return IS_HIRABLE ? <>{props.children}</> : null;\n};\n\nexport const IfNotHirable: React.FC = (props) => {\n  return !IS_HIRABLE ? <>{props.children}</> : null;\n};\n","import { createStyles, makeStyles } from \"@material-ui/core\";\n\nexport const useStyles = makeStyles(() =>\n  createStyles({\n    icon: {\n      width: \"1.2em\",\n      height: \"1.2em\",\n      display: \"inline\",\n      marginBottom: \"-0.25em\",\n    },\n  })\n);\n","import React from \"react\";\n\nimport { ReactComponent as FolderSrcIcon } from \"~/assets/icons/folder-src-open.svg\";\nimport {\n  Br,\n  CodeLikeBlock,\n  Fn,\n  Kw,\n  Sl,\n  Vn,\n  L,\n} from \"~/components/CodeLikeBlock\";\nimport { IfHirable, IfNotHirable } from \"~/components/IfHirable\";\nimport { LinkOpen } from \"~/components/LinkOpen\";\n\nimport { useStyles } from \"./AboutMe.styles\";\n\nexport const AboutMe: React.FC = () => {\n  const classes = useStyles();\n  return (\n    <CodeLikeBlock>\n      <L>\n        <Kw>Hi</Kw>, my name is <Sl>Lakshay</Sl>!\n      </L>\n      <L>\n        <Kw>Currently, I am</Kw> a <Fn>Product Manager at Microsoft</Fn>.\n      </L>\n      <L active git=\"green\">\n        <IfHirable>\n          <Kw>Currently</Kw> I am <Sl>open</Sl> to new{\" \"}\n          <Fn>job opportunities</Fn>!\n        </IfHirable>\n        <IfNotHirable>\n          <Kw>Currently</Kw> I am not looking for a new job but feel free to{\" \"}\n          <LinkOpen to=\"/contacts\" hasLinkIcon>\n            contact\n          </LinkOpen>{\" \"}\n          me.\n        </IfNotHirable>\n      </L>\n\n      <Br />\n\n      <L>\n        <Kw>I love</Kw> to write <Vn>clean</Vn>, <Vn>readable</Vn> and{\" \"}\n        <Vn>maintainable</Vn> <Fn>code</Fn>.\n      </L>\n      <L>\n        <Kw>My</Kw> main <Fn>stack</Fn> is: <Vn>JavaScript / TypeScript</Vn>,{\" \"}\n        <Vn>React</Vn>, <Vn>Node.js</Vn> and <Vn>MongoDB</Vn>.\n      </L>\n\n      <Br />\n\n      <L>\n        <Kw>You can</Kw> find all of my <Fn>skills</Fn> in the <Vn>sidebar</Vn>{\" \"}\n        on the <Sl>left</Sl>\n      </L>\n      <L>\n        (<Kw>swipe</Kw> or <Kw>tap</Kw> the <Sl>green folder</Sl>{\" \"}\n        <FolderSrcIcon className={classes.icon} /> if you&apos;re using a{\" \"}\n        <Fn>mobile device</Fn>).\n      </L>\n\n      <Br />\n\n      <L>\n        <Kw>I started</Kw> coding when I was a <Sl>teenager</Sl>.\n      </L>\n      <L>\n        <Kw>My</Kw> first <Vn>programming language</Vn> was <Fn>C++</Fn>.\n      </L>\n      <L>\n        <Kw>Then</Kw> I learned <Fn>C#</Fn> and started writing simple{\" \"}\n        <Vn>games</Vn> for fun.\n      </L>\n\n      <Br />\n\n      <L git=\"blue\">\n        <Kw>But one day</Kw>, all the cool guys started talking about{\" \"}\n        <Fn>JS</Fn> and how <Vn>awesome</Vn> and <Vn>powerful</Vn> it is.\n      </L>\n      <L git=\"blue\">\n        <Kw>So I followed</Kw> the mainstream and dedicated all my{\" \"}\n        <Vn>efforts</Vn> to become as good <Fn>web developer</Fn> as I can\n        possibly be.\n      </L>\n    </CodeLikeBlock>\n  );\n};\n\nexport default AboutMe;\n"],"sourceRoot":""}